<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

	<!-- 注解扫描包 -->
	<context:component-scan base-package="com.ygcx.controller" />
	<context:component-scan base-package="com.mix.core.controller"/>
	
	<!-- 开启注解 -->
	<mvc:annotation-driven />

	<!-- 静态资源的访问 -->
<!-- 	<mvc:resources location="/resources/" mapping="/resources/**" /> -->
	<mvc:default-servlet-handler />

	<!-- 返回JSON模版 -->
<mvc:annotation-driven  />
<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
	<property name="messageConverters">
		<list>
			<!--json转换器-->
			<ref bean="mappingJacksonHttpMessageConverter" />
		</list>
	</property>
</bean>
<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">  
	<property name="messageConverters">  
        <list>  
               <ref bean="mappingJacksonHttpMessageConverter" />  
        </list>  
    </property>  
</bean>  
        
<bean id="mappingJacksonHttpMessageConverter"  
    class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
     <property name = "supportedMediaTypes">  
		  <list>  
		    <bean class="org.springframework.http.MediaType">  
		     <constructor-arg index="0" value="text"/>  
		     <constructor-arg index="1" value="plain"/>  
		     <constructor-arg index="2" value="UTF-8"/>  
		    </bean>  
		    <bean class="org.springframework.http.MediaType">  
		     <constructor-arg index="0" value="*"/>  
		     <constructor-arg index="1" value="*"/>  
		     <constructor-arg index="2" value="UTF-8"/>  
		    </bean>  
		    <bean class="org.springframework.http.MediaType">  
		     <constructor-arg index="0" value="text"/>  
		     <constructor-arg index="1" value="*"/>  
		     <constructor-arg index="2" value="UTF-8"/>  
		    </bean>  
		     <bean class="org.springframework.http.MediaType">  
		     <constructor-arg index="0" value="application"/>  
		     <constructor-arg index="1" value="json"/>  
		     <constructor-arg index="2" value="UTF-8"/>  
		    </bean>  
		  </list>  
	</property>  
</bean>   

	<!-- 定义视图解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/app/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	
    <!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->  
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <property name="defaultEncoding" value="utf-8" />  
        <!-- 指定所上传文件的总大小不能超过10485760000B。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->  
        <property name="maxUploadSize" value="10485760000" />  
        <property name="maxInMemorySize" value="40960" />  
    </bean> 	
	
	<mvc:interceptors>    
    <mvc:interceptor>    
        <!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->  
        <mvc:mapping path="/**" />  
        <mvc:exclude-mapping path="/sys/user/userLogin" />
        <mvc:exclude-mapping path="/sys/user/userLogout" />
        <mvc:exclude-mapping path="/sys/user/userIndex" />
        
        <bean class="com.mix.core.interceptor.CommonInterceptor"></bean>    
    </mvc:interceptor>  
    <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->  
</mvc:interceptors>
</beans>